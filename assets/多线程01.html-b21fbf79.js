const e=JSON.parse('{"key":"v-38d376d7","path":"/src/JavaSE/%E5%A4%9A%E7%BA%BF%E7%A8%8B01.html","title":"多线程01","lang":"zh-CN","frontmatter":{"category":["JavaSE"],"description":"多线程01 1.实现多线程 1.1简单了解多线程【理解】 是指从软件或者硬件上实现多个线程并发执行的技术。 具有多线程能力的计算机因有硬件支持而能够在同一时间执行多个线程，提升性能。 01_简单了解多线程 1.2并发和并行【理解】 并行：在同一时刻，有多个指令在多个CPU上同时执行。 02_并行 并发：在同一时刻，有多个指令在单个CPU上交替执行。 03_并发","head":[["meta",{"property":"og:url","content":"https://github.com/Beisheng8888/blog/src/JavaSE/%E5%A4%9A%E7%BA%BF%E7%A8%8B01.html"}],["meta",{"property":"og:site_name","content":"Mr.Jh"}],["meta",{"property":"og:title","content":"多线程01"}],["meta",{"property":"og:description","content":"多线程01 1.实现多线程 1.1简单了解多线程【理解】 是指从软件或者硬件上实现多个线程并发执行的技术。 具有多线程能力的计算机因有硬件支持而能够在同一时间执行多个线程，提升性能。 01_简单了解多线程 1.2并发和并行【理解】 并行：在同一时刻，有多个指令在多个CPU上同时执行。 02_并行 并发：在同一时刻，有多个指令在单个CPU上交替执行。 03_并发"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-18T07:08:24.000Z"}],["meta",{"property":"article:author","content":"Mr.Jh"}],["meta",{"property":"article:modified_time","content":"2023-07-18T07:08:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"多线程01\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-18T07:08:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jh\\",\\"url\\":\\"https://github.com/Beisheng8888\\"}]}"]]},"headers":[{"level":2,"title":"1.实现多线程","slug":"_1-实现多线程","link":"#_1-实现多线程","children":[{"level":3,"title":"1.1简单了解多线程【理解】","slug":"_1-1简单了解多线程【理解】","link":"#_1-1简单了解多线程【理解】","children":[]},{"level":3,"title":"1.2并发和并行【理解】","slug":"_1-2并发和并行【理解】","link":"#_1-2并发和并行【理解】","children":[]},{"level":3,"title":"1.3进程和线程【理解】","slug":"_1-3进程和线程【理解】","link":"#_1-3进程和线程【理解】","children":[]},{"level":3,"title":"1.4实现多线程方式一：继承Thread类【应用】","slug":"_1-4实现多线程方式一-继承thread类【应用】","link":"#_1-4实现多线程方式一-继承thread类【应用】","children":[]},{"level":3,"title":"1.5实现多线程方式二：实现Runnable接口【应用】","slug":"_1-5实现多线程方式二-实现runnable接口【应用】","link":"#_1-5实现多线程方式二-实现runnable接口【应用】","children":[]},{"level":3,"title":"1.6实现多线程方式三: 实现Callable接口【应用】","slug":"_1-6实现多线程方式三-实现callable接口【应用】","link":"#_1-6实现多线程方式三-实现callable接口【应用】","children":[]},{"level":3,"title":"1.7设置和获取线程名称【应用】","slug":"_1-7设置和获取线程名称【应用】","link":"#_1-7设置和获取线程名称【应用】","children":[]},{"level":3,"title":"1.8线程休眠【应用】","slug":"_1-8线程休眠【应用】","link":"#_1-8线程休眠【应用】","children":[]},{"level":3,"title":"1.9线程优先级【应用】","slug":"_1-9线程优先级【应用】","link":"#_1-9线程优先级【应用】","children":[]},{"level":3,"title":"1.10守护线程【应用】","slug":"_1-10守护线程【应用】","link":"#_1-10守护线程【应用】","children":[]}]},{"level":2,"title":"2.线程同步","slug":"_2-线程同步","link":"#_2-线程同步","children":[{"level":3,"title":"2.1卖票【应用】","slug":"_2-1卖票【应用】","link":"#_2-1卖票【应用】","children":[]},{"level":3,"title":"2.2卖票案例的问题【理解】","slug":"_2-2卖票案例的问题【理解】","link":"#_2-2卖票案例的问题【理解】","children":[]},{"level":3,"title":"2.3同步代码块解决数据安全问题【应用】","slug":"_2-3同步代码块解决数据安全问题【应用】","link":"#_2-3同步代码块解决数据安全问题【应用】","children":[]},{"level":3,"title":"2.4同步方法解决数据安全问题【应用】","slug":"_2-4同步方法解决数据安全问题【应用】","link":"#_2-4同步方法解决数据安全问题【应用】","children":[]}]},{"level":2,"title":"2.5Lock锁【应用】","slug":"_2-5lock锁【应用】","link":"#_2-5lock锁【应用】","children":[{"level":3,"title":"2.6死锁【理解】","slug":"_2-6死锁【理解】","link":"#_2-6死锁【理解】","children":[]}]},{"level":2,"title":"3.生产者消费者","slug":"_3-生产者消费者","link":"#_3-生产者消费者","children":[{"level":3,"title":"3.1生产者和消费者模式概述【应用】","slug":"_3-1生产者和消费者模式概述【应用】","link":"#_3-1生产者和消费者模式概述【应用】","children":[]},{"level":3,"title":"3.2生产者和消费者案例【应用】","slug":"_3-2生产者和消费者案例【应用】","link":"#_3-2生产者和消费者案例【应用】","children":[]},{"level":3,"title":"3.3生产者和消费者案例优化【应用】","slug":"_3-3生产者和消费者案例优化【应用】","link":"#_3-3生产者和消费者案例优化【应用】","children":[]},{"level":3,"title":"3.4阻塞队列基本使用【理解】","slug":"_3-4阻塞队列基本使用【理解】","link":"#_3-4阻塞队列基本使用【理解】","children":[]},{"level":3,"title":"3.5阻塞队列实现等待唤醒机制【理解】","slug":"_3-5阻塞队列实现等待唤醒机制【理解】","link":"#_3-5阻塞队列实现等待唤醒机制【理解】","children":[]}]}],"git":{"createdTime":1689562016000,"updatedTime":1689664104000,"contributors":[{"name":"北省","email":"jih6666@126.com","commits":2}]},"readingTime":{"minutes":20.72,"words":6215},"filePathRelative":"src/JavaSE/多线程01.md","localizedDate":"2023年7月17日","excerpt":"<h1> 多线程01</h1>\\n<h2> 1.实现多线程</h2>\\n<h3> 1.1简单了解多线程【理解】</h3>\\n<p>是指从软件或者硬件上实现多个线程并发执行的技术。<br>\\n具有多线程能力的计算机因有硬件支持而能够在同一时间执行多个线程，提升性能。</p>\\n<figure><figcaption>01_简单了解多线程</figcaption></figure>\\n<h3> 1.2并发和并行【理解】</h3>\\n<ul>\\n<li>\\n<p>并行：在同一时刻，有多个指令在多个CPU上同时执行。</p>\\n<figure><figcaption>02_并行</figcaption></figure>\\n</li>\\n<li>\\n<p>并发：在同一时刻，有多个指令在单个CPU上交替执行。</p>\\n<figure><figcaption>03_并发</figcaption></figure>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
