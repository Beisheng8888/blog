const e=JSON.parse('{"key":"v-11d8a7d0","path":"/src/JavaSE/IO%E6%B5%8102.html","title":"IO流02","lang":"zh-CN","frontmatter":{"title":"IO流02","icon":"IO","category":["JavaSE"],"description":"IO流02 1.字符流 1.1为什么会出现字符流【理解】 字符流的介绍 由于字节流操作中文不是特别的方便，所以Java就提供字符流 字符流 = 字节流 + 编码表 中文的字节存储方式 用字节流复制文本文件时，文本文件也会有中文，但是没有问题，原因是最终底层操作会自动进行字节拼接成中文，如何识别是中文的呢？ 汉字在存储的时候，无论选择哪种编码存储，第一个字节都是负数 1.2编码表【理解】","head":[["meta",{"property":"og:url","content":"https://github.com/Beisheng8888/blog/src/JavaSE/IO%E6%B5%8102.html"}],["meta",{"property":"og:site_name","content":"冀辉的博客"}],["meta",{"property":"og:title","content":"IO流02"}],["meta",{"property":"og:description","content":"IO流02 1.字符流 1.1为什么会出现字符流【理解】 字符流的介绍 由于字节流操作中文不是特别的方便，所以Java就提供字符流 字符流 = 字节流 + 编码表 中文的字节存储方式 用字节流复制文本文件时，文本文件也会有中文，但是没有问题，原因是最终底层操作会自动进行字节拼接成中文，如何识别是中文的呢？ 汉字在存储的时候，无论选择哪种编码存储，第一个字节都是负数 1.2编码表【理解】"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-18T07:08:24.000Z"}],["meta",{"property":"article:author","content":"Mr.Jh"}],["meta",{"property":"article:modified_time","content":"2023-07-18T07:08:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"IO流02\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-18T07:08:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jh\\",\\"url\\":\\"https://github.com/Beisheng8888\\"}]}"]]},"headers":[{"level":2,"title":"1.字符流","slug":"_1-字符流","link":"#_1-字符流","children":[{"level":3,"title":"1.1为什么会出现字符流【理解】","slug":"_1-1为什么会出现字符流【理解】","link":"#_1-1为什么会出现字符流【理解】","children":[]},{"level":3,"title":"1.2编码表【理解】","slug":"_1-2编码表【理解】","link":"#_1-2编码表【理解】","children":[]},{"level":3,"title":"1.3字符串中的编码解码问题【应用】","slug":"_1-3字符串中的编码解码问题【应用】","link":"#_1-3字符串中的编码解码问题【应用】","children":[]},{"level":3,"title":"1.4字符流写数据【应用】","slug":"_1-4字符流写数据【应用】","link":"#_1-4字符流写数据【应用】","children":[]},{"level":3,"title":"1.5字符流读数据【应用】","slug":"_1-5字符流读数据【应用】","link":"#_1-5字符流读数据【应用】","children":[]},{"level":3,"title":"1.6字符流用户注册案例【应用】","slug":"_1-6字符流用户注册案例【应用】","link":"#_1-6字符流用户注册案例【应用】","children":[]},{"level":3,"title":"1.7字符缓冲流【应用】","slug":"_1-7字符缓冲流【应用】","link":"#_1-7字符缓冲流【应用】","children":[]},{"level":3,"title":"1.8字符缓冲流特有功能【应用】","slug":"_1-8字符缓冲流特有功能【应用】","link":"#_1-8字符缓冲流特有功能【应用】","children":[]},{"level":3,"title":"1.9字符缓冲流操作文件中数据排序案例【应用】","slug":"_1-9字符缓冲流操作文件中数据排序案例【应用】","link":"#_1-9字符缓冲流操作文件中数据排序案例【应用】","children":[]},{"level":3,"title":"1.10IO流小结【理解】","slug":"_1-10io流小结【理解】","link":"#_1-10io流小结【理解】","children":[]}]},{"level":2,"title":"2.转换流","slug":"_2-转换流","link":"#_2-转换流","children":[{"level":3,"title":"2.1字符流中和编码解码问题相关的两个类【理解】","slug":"_2-1字符流中和编码解码问题相关的两个类【理解】","link":"#_2-1字符流中和编码解码问题相关的两个类【理解】","children":[]},{"level":3,"title":"2.2转换流读写数据【应用】","slug":"_2-2转换流读写数据【应用】","link":"#_2-2转换流读写数据【应用】","children":[]}]},{"level":2,"title":"3.对象操作流","slug":"_3-对象操作流","link":"#_3-对象操作流","children":[{"level":3,"title":"3.1对象序列化流【应用】","slug":"_3-1对象序列化流【应用】","link":"#_3-1对象序列化流【应用】","children":[]},{"level":3,"title":"3.2对象反序列化流【应用】","slug":"_3-2对象反序列化流【应用】","link":"#_3-2对象反序列化流【应用】","children":[]},{"level":3,"title":"3.3serialVersionUID&transient【应用】","slug":"_3-3serialversionuid-transient【应用】","link":"#_3-3serialversionuid-transient【应用】","children":[]},{"level":3,"title":"3.4对象操作流练习【应用】","slug":"_3-4对象操作流练习【应用】","link":"#_3-4对象操作流练习【应用】","children":[]}]},{"level":2,"title":"4. Properties集合","slug":"_4-properties集合","link":"#_4-properties集合","children":[{"level":3,"title":"4.1 Properties作为Map集合的使用【应用】","slug":"_4-1-properties作为map集合的使用【应用】","link":"#_4-1-properties作为map集合的使用【应用】","children":[]},{"level":3,"title":"4.2 Properties作为Map集合的特有方法【应用】","slug":"_4-2-properties作为map集合的特有方法【应用】","link":"#_4-2-properties作为map集合的特有方法【应用】","children":[]},{"level":3,"title":"4.3 Properties和IO流相结合的方法【应用】","slug":"_4-3-properties和io流相结合的方法【应用】","link":"#_4-3-properties和io流相结合的方法【应用】","children":[]},{"level":3,"title":"4.4Properties集合练习【应用】","slug":"_4-4properties集合练习【应用】","link":"#_4-4properties集合练习【应用】","children":[]}]}],"git":{"createdTime":1689316800000,"updatedTime":1689664104000,"contributors":[{"name":"北省","email":"jih6666@126.com","commits":4}]},"readingTime":{"minutes":17.35,"words":5206},"filePathRelative":"src/JavaSE/IO流02.md","localizedDate":"2023年7月14日","excerpt":"<h1> IO流02</h1>\\n<h2> 1.字符流</h2>\\n<h3> 1.1为什么会出现字符流【理解】</h3>\\n<ul>\\n<li>\\n<p>字符流的介绍</p>\\n<p>由于字节流操作中文不是特别的方便，所以Java就提供字符流</p>\\n<p>字符流 = 字节流 + 编码表</p>\\n</li>\\n<li>\\n<p>中文的字节存储方式</p>\\n<p>用字节流复制文本文件时，文本文件也会有中文，但是没有问题，原因是最终底层操作会自动进行字节拼接成中文，如何识别是中文的呢？</p>\\n<p>汉字在存储的时候，无论选择哪种编码存储，第一个字节都是负数</p>\\n</li>\\n</ul>\\n<h3> 1.2编码表【理解】</h3>","autoDesc":true}');export{e as data};
