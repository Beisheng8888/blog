const e=JSON.parse('{"key":"v-575b7ca0","path":"/src/%E5%9F%BA%E7%A1%80%E6%A1%86%E6%9E%B6/Maven%E9%AB%98%E7%BA%A7.html","title":"Maven高级","lang":"zh-CN","frontmatter":{"category":["基础框架"],"tag":["Maven"],"description":"Maven高级 一、分模块开发与设计 1. 分模块开发的意义 问题导入 分模块开发对工程有什么好处？ 模块拆分原则 目的：项目的扩展性变强了，方便其他项目引用相同的功能。 image-20210716092839618 将原始模块按照功能拆分成若干个子模块，方便模块间的相互调用，接口共享 image-20210805122133568","head":[["meta",{"property":"og:url","content":"https://github.com/Beisheng8888/blog/src/%E5%9F%BA%E7%A1%80%E6%A1%86%E6%9E%B6/Maven%E9%AB%98%E7%BA%A7.html"}],["meta",{"property":"og:site_name","content":"Mr.Jh"}],["meta",{"property":"og:title","content":"Maven高级"}],["meta",{"property":"og:description","content":"Maven高级 一、分模块开发与设计 1. 分模块开发的意义 问题导入 分模块开发对工程有什么好处？ 模块拆分原则 目的：项目的扩展性变强了，方便其他项目引用相同的功能。 image-20210716092839618 将原始模块按照功能拆分成若干个子模块，方便模块间的相互调用，接口共享 image-20210805122133568"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-18T07:48:56.000Z"}],["meta",{"property":"article:author","content":"Mr.Jh"}],["meta",{"property":"article:tag","content":"Maven"}],["meta",{"property":"article:modified_time","content":"2023-07-18T07:48:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Maven高级\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-18T07:48:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jh\\",\\"url\\":\\"https://github.com/Beisheng8888\\"}]}"]]},"headers":[{"level":2,"title":"一、分模块开发与设计","slug":"一、分模块开发与设计","link":"#一、分模块开发与设计","children":[{"level":3,"title":"1. 分模块开发的意义","slug":"_1-分模块开发的意义","link":"#_1-分模块开发的意义","children":[]},{"level":3,"title":"模块拆分原则","slug":"模块拆分原则","link":"#模块拆分原则","children":[]},{"level":3,"title":"2. 分模块开发（模块拆分）","slug":"_2-分模块开发-模块拆分","link":"#_2-分模块开发-模块拆分","children":[]}]},{"level":2,"title":"二、依赖管理","slug":"二、依赖管理","link":"#二、依赖管理","children":[{"level":3,"title":"1. 依赖传递","slug":"_1-依赖传递","link":"#_1-依赖传递","children":[]},{"level":3,"title":"2. 可选依赖","slug":"_2-可选依赖","link":"#_2-可选依赖","children":[]},{"level":3,"title":"3. 排除依赖","slug":"_3-排除依赖","link":"#_3-排除依赖","children":[]},{"level":3,"title":"4 可选依赖和排除依赖的区别","slug":"_4-可选依赖和排除依赖的区别","link":"#_4-可选依赖和排除依赖的区别","children":[]}]},{"level":2,"title":"三、聚合与继承","slug":"三、聚合与继承","link":"#三、聚合与继承","children":[{"level":3,"title":"1. 聚合工程","slug":"_1-聚合工程","link":"#_1-聚合工程","children":[]},{"level":3,"title":"2. 聚合工程开发","slug":"_2-聚合工程开发","link":"#_2-聚合工程开发","children":[]},{"level":3,"title":"3. 继承关系","slug":"_3-继承关系","link":"#_3-继承关系","children":[]},{"level":3,"title":"4. 继承关系开发","slug":"_4-继承关系开发","link":"#_4-继承关系开发","children":[]},{"level":3,"title":"5. 聚合与继承的区别","slug":"_5-聚合与继承的区别","link":"#_5-聚合与继承的区别","children":[]}]},{"level":2,"title":"四、属性管理","slug":"四、属性管理","link":"#四、属性管理","children":[{"level":3,"title":"1. 属性","slug":"_1-属性","link":"#_1-属性","children":[]},{"level":3,"title":"2. 版本管理","slug":"_2-版本管理","link":"#_2-版本管理","children":[]}]},{"level":2,"title":"五、多环境配置与应用","slug":"五、多环境配置与应用","link":"#五、多环境配置与应用","children":[{"level":3,"title":"1. 多环境配置作用","slug":"_1-多环境配置作用","link":"#_1-多环境配置作用","children":[]},{"level":3,"title":"2. 多环境配置步骤","slug":"_2-多环境配置步骤","link":"#_2-多环境配置步骤","children":[]},{"level":3,"title":"2. 跳过测试（了解）","slug":"_2-跳过测试-了解","link":"#_2-跳过测试-了解","children":[]}]},{"level":2,"title":"六、私服","slug":"六、私服","link":"#六、私服","children":[{"level":3,"title":"1. 私服介绍","slug":"_1-私服介绍","link":"#_1-私服介绍","children":[]},{"level":3,"title":"2. 私服仓库分类","slug":"_2-私服仓库分类","link":"#_2-私服仓库分类","children":[]},{"level":3,"title":"3. 资源上传与下载","slug":"_3-资源上传与下载","link":"#_3-资源上传与下载","children":[]}]}],"git":{"createdTime":1689565133000,"updatedTime":1689666536000,"contributors":[{"name":"北省","email":"jih6666@126.com","commits":2}]},"readingTime":{"minutes":10.27,"words":3080},"filePathRelative":"src/基础框架/Maven高级.md","localizedDate":"2023年7月17日","excerpt":"<h1> Maven高级</h1>\\n<h2> 一、分模块开发与设计</h2>\\n<h3> 1. 分模块开发的意义</h3>\\n<h4> 问题导入</h4>\\n<p>分模块开发对工程有什么好处？</p>\\n<h3> 模块拆分原则</h3>\\n<p>目的：项目的扩展性变强了，方便其他项目引用相同的功能。</p>\\n<figure><figcaption>image-20210716092839618</figcaption></figure>\\n<ul>\\n<li>将原始模块按照功能拆分成若干个子模块，方便模块间的相互调用，接口共享</li>\\n</ul>\\n<figure><figcaption>image-20210805122133568</figcaption></figure>","autoDesc":true}');export{e as data};
