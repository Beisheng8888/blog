const e=JSON.parse('{"key":"v-b16856f0","path":"/src/%E5%9F%BA%E7%A1%80%E5%BE%AE%E6%9C%8D%E5%8A%A1/Docker.html","title":"Docker实用篇","lang":"zh-CN","frontmatter":{"category":["基础微服务"],"tag":["Docker"],"description":"Docker实用篇 1.初识Docker 1.1.什么是Docker 微服务虽然具备各种各样的优势，但服务的拆分通用给部署带来了很大的麻烦。 分布式系统中，依赖的组件非常多，不同组件之间部署时往往会产生一些冲突。 在数百上千台服务中重复部署，环境不一定一致，会遇到各种问题 1.1.1.应用部署的环境问题 大型项目组件较多，运行环境也较为复杂，部署时会碰到一些问题： 依赖关系复杂，容易出现兼容性问题 开发、测试、生产环境有差异","head":[["meta",{"property":"og:url","content":"https://github.com/Beisheng8888/blog/src/%E5%9F%BA%E7%A1%80%E5%BE%AE%E6%9C%8D%E5%8A%A1/Docker.html"}],["meta",{"property":"og:site_name","content":"Mr.Jh"}],["meta",{"property":"og:title","content":"Docker实用篇"}],["meta",{"property":"og:description","content":"Docker实用篇 1.初识Docker 1.1.什么是Docker 微服务虽然具备各种各样的优势，但服务的拆分通用给部署带来了很大的麻烦。 分布式系统中，依赖的组件非常多，不同组件之间部署时往往会产生一些冲突。 在数百上千台服务中重复部署，环境不一定一致，会遇到各种问题 1.1.1.应用部署的环境问题 大型项目组件较多，运行环境也较为复杂，部署时会碰到一些问题： 依赖关系复杂，容易出现兼容性问题 开发、测试、生产环境有差异"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-18T07:48:56.000Z"}],["meta",{"property":"article:author","content":"Mr.Jh"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:modified_time","content":"2023-07-18T07:48:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker实用篇\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-18T07:48:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Jh\\",\\"url\\":\\"https://github.com/Beisheng8888\\"}]}"]]},"headers":[{"level":2,"title":"1.1.什么是Docker","slug":"_1-1-什么是docker","link":"#_1-1-什么是docker","children":[{"level":3,"title":"1.1.1.应用部署的环境问题","slug":"_1-1-1-应用部署的环境问题","link":"#_1-1-1-应用部署的环境问题","children":[]},{"level":3,"title":"1.1.2.Docker解决依赖兼容问题","slug":"_1-1-2-docker解决依赖兼容问题","link":"#_1-1-2-docker解决依赖兼容问题","children":[]},{"level":3,"title":"1.1.3.Docker解决操作系统环境差异","slug":"_1-1-3-docker解决操作系统环境差异","link":"#_1-1-3-docker解决操作系统环境差异","children":[]},{"level":3,"title":"1.1.4.小结","slug":"_1-1-4-小结","link":"#_1-1-4-小结","children":[]}]},{"level":2,"title":"1.2.Docker和虚拟机的区别","slug":"_1-2-docker和虚拟机的区别","link":"#_1-2-docker和虚拟机的区别","children":[]},{"level":2,"title":"1.3.Docker架构","slug":"_1-3-docker架构","link":"#_1-3-docker架构","children":[{"level":3,"title":"1.3.1.镜像和容器","slug":"_1-3-1-镜像和容器","link":"#_1-3-1-镜像和容器","children":[]},{"level":3,"title":"1.3.2.DockerHub","slug":"_1-3-2-dockerhub","link":"#_1-3-2-dockerhub","children":[]},{"level":3,"title":"1.3.3.Docker架构","slug":"_1-3-3-docker架构","link":"#_1-3-3-docker架构","children":[]},{"level":3,"title":"1.3.4.小结","slug":"_1-3-4-小结","link":"#_1-3-4-小结","children":[]}]},{"level":2,"title":"1.4.安装Docker","slug":"_1-4-安装docker","link":"#_1-4-安装docker","children":[]},{"level":2,"title":"2.1.镜像操作","slug":"_2-1-镜像操作","link":"#_2-1-镜像操作","children":[{"level":3,"title":"2.1.1.镜像名称","slug":"_2-1-1-镜像名称","link":"#_2-1-1-镜像名称","children":[]},{"level":3,"title":"2.1.2.镜像命令","slug":"_2-1-2-镜像命令","link":"#_2-1-2-镜像命令","children":[]},{"level":3,"title":"2.1.3.案例1-拉取、查看镜像","slug":"_2-1-3-案例1-拉取、查看镜像","link":"#_2-1-3-案例1-拉取、查看镜像","children":[]},{"level":3,"title":"2.1.4.案例2-保存、导入镜像","slug":"_2-1-4-案例2-保存、导入镜像","link":"#_2-1-4-案例2-保存、导入镜像","children":[]},{"level":3,"title":"2.1.5.练习","slug":"_2-1-5-练习","link":"#_2-1-5-练习","children":[]}]},{"level":2,"title":"2.2.容器操作","slug":"_2-2-容器操作","link":"#_2-2-容器操作","children":[{"level":3,"title":"2.2.1.容器相关命令","slug":"_2-2-1-容器相关命令","link":"#_2-2-1-容器相关命令","children":[]},{"level":3,"title":"2.2.2.案例-创建并运行一个容器","slug":"_2-2-2-案例-创建并运行一个容器","link":"#_2-2-2-案例-创建并运行一个容器","children":[]},{"level":3,"title":"2.2.3.案例-进入容器，修改文件","slug":"_2-2-3-案例-进入容器-修改文件","link":"#_2-2-3-案例-进入容器-修改文件","children":[]},{"level":3,"title":"2.2.4.小结","slug":"_2-2-4-小结","link":"#_2-2-4-小结","children":[]}]},{"level":2,"title":"2.3.数据卷（容器数据管理）","slug":"_2-3-数据卷-容器数据管理","link":"#_2-3-数据卷-容器数据管理","children":[{"level":3,"title":"2.3.1.什么是数据卷","slug":"_2-3-1-什么是数据卷","link":"#_2-3-1-什么是数据卷","children":[]},{"level":3,"title":"2.3.2.数据集操作命令","slug":"_2-3-2-数据集操作命令","link":"#_2-3-2-数据集操作命令","children":[]},{"level":3,"title":"2.3.3.创建和查看数据卷","slug":"_2-3-3-创建和查看数据卷","link":"#_2-3-3-创建和查看数据卷","children":[]},{"level":3,"title":"2.3.4.挂载数据卷","slug":"_2-3-4-挂载数据卷","link":"#_2-3-4-挂载数据卷","children":[]},{"level":3,"title":"2.3.5.案例-给nginx挂载数据卷","slug":"_2-3-5-案例-给nginx挂载数据卷","link":"#_2-3-5-案例-给nginx挂载数据卷","children":[]},{"level":3,"title":"2.3.6.案例-给MySQL挂载本地目录","slug":"_2-3-6-案例-给mysql挂载本地目录","link":"#_2-3-6-案例-给mysql挂载本地目录","children":[]},{"level":3,"title":"2.3.7.小结","slug":"_2-3-7-小结","link":"#_2-3-7-小结","children":[]}]},{"level":2,"title":"3.1.镜像结构","slug":"_3-1-镜像结构","link":"#_3-1-镜像结构","children":[]},{"level":2,"title":"3.2.Dockerfile语法","slug":"_3-2-dockerfile语法","link":"#_3-2-dockerfile语法","children":[]},{"level":2,"title":"3.3.构建Java项目","slug":"_3-3-构建java项目","link":"#_3-3-构建java项目","children":[{"level":3,"title":"3.3.1.基于Ubuntu构建Java项目","slug":"_3-3-1-基于ubuntu构建java项目","link":"#_3-3-1-基于ubuntu构建java项目","children":[]},{"level":3,"title":"3.3.2.基于java8构建Java项目","slug":"_3-3-2-基于java8构建java项目","link":"#_3-3-2-基于java8构建java项目","children":[]}]},{"level":2,"title":"3.4.小结","slug":"_3-4-小结","link":"#_3-4-小结","children":[]},{"level":2,"title":"4.1.初识DockerCompose","slug":"_4-1-初识dockercompose","link":"#_4-1-初识dockercompose","children":[]},{"level":2,"title":"4.2.安装DockerCompose","slug":"_4-2-安装dockercompose","link":"#_4-2-安装dockercompose","children":[]},{"level":2,"title":"4.3.部署微服务集群","slug":"_4-3-部署微服务集群","link":"#_4-3-部署微服务集群","children":[{"level":3,"title":"4.3.1.compose文件","slug":"_4-3-1-compose文件","link":"#_4-3-1-compose文件","children":[]},{"level":3,"title":"4.3.2.修改微服务配置","slug":"_4-3-2-修改微服务配置","link":"#_4-3-2-修改微服务配置","children":[]},{"level":3,"title":"4.3.3.打包","slug":"_4-3-3-打包","link":"#_4-3-3-打包","children":[]},{"level":3,"title":"4.3.4.拷贝jar包到部署目录","slug":"_4-3-4-拷贝jar包到部署目录","link":"#_4-3-4-拷贝jar包到部署目录","children":[]},{"level":3,"title":"4.3.5.部署","slug":"_4-3-5-部署","link":"#_4-3-5-部署","children":[]}]},{"level":2,"title":"5.1.搭建私有镜像仓库","slug":"_5-1-搭建私有镜像仓库","link":"#_5-1-搭建私有镜像仓库","children":[]},{"level":2,"title":"5.2.推送、拉取镜像","slug":"_5-2-推送、拉取镜像","link":"#_5-2-推送、拉取镜像","children":[]}],"git":{"createdTime":1689565728000,"updatedTime":1689666536000,"contributors":[{"name":"北省","email":"jih6666@126.com","commits":2}]},"readingTime":{"minutes":22.1,"words":6629},"filePathRelative":"src/基础微服务/Docker.md","localizedDate":"2023年7月17日","excerpt":"<h1> Docker实用篇</h1>\\n<h1> 1.初识Docker</h1>\\n<h2> 1.1.什么是Docker</h2>\\n<p>微服务虽然具备各种各样的优势，但服务的拆分通用给部署带来了很大的麻烦。</p>\\n<ul>\\n<li>分布式系统中，依赖的组件非常多，不同组件之间部署时往往会产生一些冲突。</li>\\n<li>在数百上千台服务中重复部署，环境不一定一致，会遇到各种问题</li>\\n</ul>\\n<h3> 1.1.1.应用部署的环境问题</h3>\\n<p>大型项目组件较多，运行环境也较为复杂，部署时会碰到一些问题：</p>\\n<ul>\\n<li>\\n<p>依赖关系复杂，容易出现兼容性问题</p>\\n</li>\\n<li>\\n<p>开发、测试、生产环境有差异</p>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
