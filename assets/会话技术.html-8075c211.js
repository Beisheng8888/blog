const e=JSON.parse('{"key":"v-8567d7ee","path":"/src/JavaWeb/%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF.html","title":"会话技术","lang":"zh-CN","frontmatter":{"description":"会话技术 1，会话跟踪技术的概述 对于会话跟踪这四个词，我们需要拆开来进行解释，首先要理解什么是会话，然后再去理解什么是会话跟踪: 会话:用户打开浏览器，访问web服务器的资源，会话建立，直到有一方断开连接，会话结束。在一次会话中可以包含多次请求和响应。 从浏览器发出请求到服务端响应数据给前端之后，一次会话(在浏览器和服务器之间)就被建立了 会话被建立后，如果浏览器或服务端都没有被关闭，则会话就会持续建立着 浏览器和服务器就可以继续使用该会话进行请求发送和响应，上述的整个过程就被称之为会话。 用实际场景来理解下会话，比如在我们访问京东的时候，当打开浏览器进入京东首页后，浏览器和京东的服务器之间就建立了一次会话，后面的搜索商品,查看商品的详情,加入购物车等都是在这一次会话中完成。 思考:下图中总共建立了几个会话? 1629382713180 每个浏览器都会与服务端建立了一个会话，加起来总共是3个会话。 会话跟踪:一种维护浏览器状态的方法，服务器需要识别多次请求是否来自于同一浏览器，以便在同一次会话的多次请求间共享数据。 服务器会收到多个请求，这多个请求可能来自多个浏览器，如上图中的6个请求来自3个浏览器 服务器需要用来识别请求是否来自同一个浏览器 服务器用来识别浏览器的过程，这个过程就是会话跟踪 服务器识别浏览器后就可以在同一个会话中多次请求之间来共享数据 那么我们又有一个问题需要思考，一个会话中的多次请求为什么要共享数据呢?有了这个数据共享功能后能实现哪些功能呢? 购物车: 加入购物车和去购物车结算是两次请求，但是后面这次请求要想展示前一次请求所添加的商品，就需要用到数据共享。 1629383655260 页面展示用户登录信息:很多网站，登录后访问多个功能发送多次请求后，浏览器上都会有当前登录用户的信息[用户名]，比如百度、京东、码云等。 1629383767654 网站登录页面的记住我功能:当用户登录成功后，勾选记住我按钮后下次再登录的时候，网站就会自动填充用户名和密码，简化用户的登录操作，多次登录就会有多次请求，他们之间也涉及到共享数据 1629383921990 登录页面的验证码功能:生成验证码和输入验证码点击注册这也是两次请求，这两次请求的数据之间要进行对比，相同则允许注册，不同则拒绝注册，该功能的实现也需要在同一次会话中共享数据。 1629384004179","head":[["meta",{"property":"og:url","content":"https://github.com/Beisheng8888/blog/src/JavaWeb/%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF.html"}],["meta",{"property":"og:site_name","content":"冀辉的博客"}],["meta",{"property":"og:title","content":"会话技术"}],["meta",{"property":"og:description","content":"会话技术 1，会话跟踪技术的概述 对于会话跟踪这四个词，我们需要拆开来进行解释，首先要理解什么是会话，然后再去理解什么是会话跟踪: 会话:用户打开浏览器，访问web服务器的资源，会话建立，直到有一方断开连接，会话结束。在一次会话中可以包含多次请求和响应。 从浏览器发出请求到服务端响应数据给前端之后，一次会话(在浏览器和服务器之间)就被建立了 会话被建立后，如果浏览器或服务端都没有被关闭，则会话就会持续建立着 浏览器和服务器就可以继续使用该会话进行请求发送和响应，上述的整个过程就被称之为会话。 用实际场景来理解下会话，比如在我们访问京东的时候，当打开浏览器进入京东首页后，浏览器和京东的服务器之间就建立了一次会话，后面的搜索商品,查看商品的详情,加入购物车等都是在这一次会话中完成。 思考:下图中总共建立了几个会话? 1629382713180 每个浏览器都会与服务端建立了一个会话，加起来总共是3个会话。 会话跟踪:一种维护浏览器状态的方法，服务器需要识别多次请求是否来自于同一浏览器，以便在同一次会话的多次请求间共享数据。 服务器会收到多个请求，这多个请求可能来自多个浏览器，如上图中的6个请求来自3个浏览器 服务器需要用来识别请求是否来自同一个浏览器 服务器用来识别浏览器的过程，这个过程就是会话跟踪 服务器识别浏览器后就可以在同一个会话中多次请求之间来共享数据 那么我们又有一个问题需要思考，一个会话中的多次请求为什么要共享数据呢?有了这个数据共享功能后能实现哪些功能呢? 购物车: 加入购物车和去购物车结算是两次请求，但是后面这次请求要想展示前一次请求所添加的商品，就需要用到数据共享。 1629383655260 页面展示用户登录信息:很多网站，登录后访问多个功能发送多次请求后，浏览器上都会有当前登录用户的信息[用户名]，比如百度、京东、码云等。 1629383767654 网站登录页面的记住我功能:当用户登录成功后，勾选记住我按钮后下次再登录的时候，网站就会自动填充用户名和密码，简化用户的登录操作，多次登录就会有多次请求，他们之间也涉及到共享数据 1629383921990 登录页面的验证码功能:生成验证码和输入验证码点击注册这也是两次请求，这两次请求的数据之间要进行对比，相同则允许注册，不同则拒绝注册，该功能的实现也需要在同一次会话中共享数据。 1629384004179"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-17T03:18:35.000Z"}],["meta",{"property":"article:author","content":"Mr.JH"}],["meta",{"property":"article:modified_time","content":"2023-07-17T03:18:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"会话技术\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-17T03:18:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.JH\\",\\"url\\":\\"https://github.com/Beisheng8888\\"}]}"]]},"headers":[{"level":2,"title":"1，会话跟踪技术的概述","slug":"_1-会话跟踪技术的概述","link":"#_1-会话跟踪技术的概述","children":[]},{"level":2,"title":"2，Cookie","slug":"_2-cookie","link":"#_2-cookie","children":[{"level":3,"title":"2.1 Cookie的基本使用","slug":"_2-1-cookie的基本使用","link":"#_2-1-cookie的基本使用","children":[]},{"level":3,"title":"2.2 Cookie的原理分析","slug":"_2-2-cookie的原理分析","link":"#_2-2-cookie的原理分析","children":[]},{"level":3,"title":"2.3 Cookie的使用细节","slug":"_2-3-cookie的使用细节","link":"#_2-3-cookie的使用细节","children":[]}]},{"level":2,"title":"3，Session","slug":"_3-session","link":"#_3-session","children":[{"level":3,"title":"3.1 Session的基本使用","slug":"_3-1-session的基本使用","link":"#_3-1-session的基本使用","children":[]},{"level":3,"title":"3.2 Session的原理分析","slug":"_3-2-session的原理分析","link":"#_3-2-session的原理分析","children":[]},{"level":3,"title":"3.3 Session的使用细节","slug":"_3-3-session的使用细节","link":"#_3-3-session的使用细节","children":[]}]}],"git":{"createdTime":1689563915000,"updatedTime":1689563915000,"contributors":[{"name":"北省","email":"jih6666@126.com","commits":1}]},"readingTime":{"minutes":27.7,"words":8311},"filePathRelative":"src/JavaWeb/会话技术.md","localizedDate":"2023年7月17日","excerpt":"<h1> 会话技术</h1>\\n<h2> 1，会话跟踪技术的概述</h2>\\n<p>对于<code>会话跟踪</code>这四个词，我们需要拆开来进行解释，首先要理解什么是<code>会话</code>，然后再去理解什么是<code>会话跟踪</code>:</p>\\n<ul>\\n<li>\\n<p>会话:用户打开浏览器，访问web服务器的资源，会话建立，直到有一方断开连接，会话结束。在一次会话中可以包含<mark>多次</mark>请求和响应。</p>\\n<ul>\\n<li>从浏览器发出请求到服务端响应数据给前端之后，一次会话(在浏览器和服务器之间)就被建立了</li>\\n<li>会话被建立后，如果浏览器或服务端都没有被关闭，则会话就会持续建立着</li>\\n<li>浏览器和服务器就可以继续使用该会话进行请求发送和响应，上述的整个过程就被称之为<mark>会话</mark>。</li>\\n</ul>\\n<p>用实际场景来理解下会话，比如在我们访问京东的时候，当打开浏览器进入京东首页后，浏览器和京东的服务器之间就建立了一次会话，后面的搜索商品,查看商品的详情,加入购物车等都是在这一次会话中完成。</p>\\n<p>思考:下图中总共建立了几个会话?</p>\\n<figure><figcaption>1629382713180</figcaption></figure>\\n<p>每个浏览器都会与服务端建立了一个会话，加起来总共是<mark>3</mark>个会话。</p>\\n</li>\\n<li>\\n<p>会话跟踪:一种维护浏览器状态的方法，服务器需要识别多次请求是否来自于同一浏览器，以便在同一次会话的多次请求间<mark>共享数据</mark>。</p>\\n<ul>\\n<li>服务器会收到多个请求，这多个请求可能来自多个浏览器，如上图中的6个请求来自3个浏览器</li>\\n<li>服务器需要用来识别请求是否来自同一个浏览器</li>\\n<li>服务器用来识别浏览器的过程，这个过程就是<mark>会话跟踪</mark></li>\\n<li>服务器识别浏览器后就可以在同一个会话中多次请求之间来共享数据</li>\\n</ul>\\n<p>那么我们又有一个问题需要思考，一个会话中的多次请求为什么要共享数据呢?有了这个数据共享功能后能实现哪些功能呢?</p>\\n<ul>\\n<li>\\n<p>购物车: <code>加入购物车</code>和<code>去购物车结算</code>是两次请求，但是后面这次请求要想展示前一次请求所添加的商品，就需要用到数据共享。</p>\\n<figure><figcaption>1629383655260</figcaption></figure>\\n</li>\\n<li>\\n<p>页面展示用户登录信息:很多网站，登录后访问多个功能发送多次请求后，浏览器上都会有当前登录用户的信息[用户名]，比如百度、京东、码云等。</p>\\n<figure><figcaption>1629383767654</figcaption></figure>\\n</li>\\n<li>\\n<p>网站登录页面的<code>记住我</code>功能:当用户登录成功后，勾选<code>记住我</code>按钮后下次再登录的时候，网站就会自动填充用户名和密码，简化用户的登录操作，多次登录就会有多次请求，他们之间也涉及到共享数据</p>\\n<figure><figcaption>1629383921990</figcaption></figure>\\n</li>\\n<li>\\n<p>登录页面的验证码功能:生成验证码和输入验证码点击注册这也是两次请求，这两次请求的数据之间要进行对比，相同则允许注册，不同则拒绝注册，该功能的实现也需要在同一次会话中共享数据。</p>\\n<figure><figcaption>1629384004179</figcaption></figure>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
