export const data = JSON.parse("{\"key\":\"v-31e6e47a\",\"path\":\"/src/JavaWeb/Maven%E5%92%8CMyBatis.html\",\"title\":\"Maven&MyBatis\",\"lang\":\"zh-CN\",\"frontmatter\":{\"category\":[\"JavaWeb\"],\"description\":\"Maven&amp;MyBatis 1，Maven Maven是专门用于管理和构建Java项目的工具，它的主要功能有： 提供了一套标准化的项目结构 提供了一套标准化的构建流程（编译，测试，打包，发布……） 提供了一套依赖管理机制 标准化的项目结构： 项目结构我们都知道，每一个开发工具（IDE）都有自己不同的项目结构，它们互相之间不通用。我再eclipse中创建的目录，无法在idea中进行使用，这就造成了很大的不方便，如下图: 前两个是以后开发经常使用的开发工具\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://github.com/Beisheng8888/blog/src/JavaWeb/Maven%E5%92%8CMyBatis.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Mr.Jh\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Maven&MyBatis\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Maven&amp;MyBatis 1，Maven Maven是专门用于管理和构建Java项目的工具，它的主要功能有： 提供了一套标准化的项目结构 提供了一套标准化的构建流程（编译，测试，打包，发布……） 提供了一套依赖管理机制 标准化的项目结构： 项目结构我们都知道，每一个开发工具（IDE）都有自己不同的项目结构，它们互相之间不通用。我再eclipse中创建的目录，无法在idea中进行使用，这就造成了很大的不方便，如下图: 前两个是以后开发经常使用的开发工具\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-07-18T07:08:24.000Z\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Mr.Jh\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-07-18T07:08:24.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Maven&MyBatis\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":\\\"2023-07-18T07:08:24.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Mr.Jh\\\",\\\"url\\\":\\\"https://github.com/Beisheng8888\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"1，Maven\",\"slug\":\"_1-maven\",\"link\":\"#_1-maven\",\"children\":[{\"level\":3,\"title\":\"1.1  Maven简介\",\"slug\":\"_1-1-maven简介\",\"link\":\"#_1-1-maven简介\",\"children\":[]},{\"level\":3,\"title\":\"1.2  Maven安装配置\",\"slug\":\"_1-2-maven安装配置\",\"link\":\"#_1-2-maven安装配置\",\"children\":[]},{\"level\":3,\"title\":\"1.3  Maven基本使用\",\"slug\":\"_1-3-maven基本使用\",\"link\":\"#_1-3-maven基本使用\",\"children\":[]},{\"level\":3,\"title\":\"1.4  IDEA使用Maven\",\"slug\":\"_1-4-idea使用maven\",\"link\":\"#_1-4-idea使用maven\",\"children\":[]},{\"level\":3,\"title\":\"1.5  依赖管理\",\"slug\":\"_1-5-依赖管理\",\"link\":\"#_1-5-依赖管理\",\"children\":[]}]},{\"level\":2,\"title\":\"2，Mybatis\",\"slug\":\"_2-mybatis\",\"link\":\"#_2-mybatis\",\"children\":[{\"level\":3,\"title\":\"2.1  Mybatis概述\",\"slug\":\"_2-1-mybatis概述\",\"link\":\"#_2-1-mybatis概述\",\"children\":[]},{\"level\":3,\"title\":\"2.2  Mybatis快速入门\",\"slug\":\"_2-2-mybatis快速入门\",\"link\":\"#_2-2-mybatis快速入门\",\"children\":[]},{\"level\":3,\"title\":\"2.3  Mapper代理开发\",\"slug\":\"_2-3-mapper代理开发\",\"link\":\"#_2-3-mapper代理开发\",\"children\":[]},{\"level\":3,\"title\":\"2.4  核心配置文件\",\"slug\":\"_2-4-核心配置文件\",\"link\":\"#_2-4-核心配置文件\",\"children\":[]}]}],\"git\":{\"createdTime\":1689563915000,\"updatedTime\":1689664104000,\"contributors\":[{\"name\":\"北省\",\"email\":\"jih6666@126.com\",\"commits\":2}]},\"readingTime\":{\"minutes\":19.56,\"words\":5867},\"filePathRelative\":\"src/JavaWeb/Maven和MyBatis.md\",\"localizedDate\":\"2023年7月17日\",\"excerpt\":\"<h1> Maven&amp;MyBatis</h1>\\n<h2> 1，Maven</h2>\\n<p>Maven是专门用于管理和构建Java项目的工具，它的主要功能有：</p>\\n<ul>\\n<li>\\n<p>提供了一套标准化的项目结构</p>\\n</li>\\n<li>\\n<p>提供了一套标准化的构建流程（编译，测试，打包，发布……）</p>\\n</li>\\n<li>\\n<p>提供了一套依赖管理机制</p>\\n</li>\\n</ul>\\n<p><strong>标准化的项目结构：</strong></p>\\n<p>项目结构我们都知道，每一个开发工具（IDE）都有自己不同的项目结构，它们互相之间不通用。我再eclipse中创建的目录，无法在idea中进行使用，这就造成了很大的不方便，如下图:<br>\\n前两个是以后开发经常使用的开发工具</p>\",\"autoDesc\":true}")
